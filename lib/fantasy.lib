#!/bin/bash
function fantasy.hook() {
   #Hooks onto fantasy
   #Example
   # if [ $(fantasy.hook <fantasy word> <(optional) do function>) = 1
   #Find the default fantasy character in the config
   fantasyword=$(no '$1')
   fantasywordchar=${fantasyword:0:1}
   if [ "$fantasywordchar" = "$fantasy_char" ]; then
      #So it's the fantasy
      #Remove the fantasychar
      fantasy=${fantasyword#$fantasy_char}
      if [ "$fantasy" = "$1" ]; then
         if [ "$2" ]; then
            oright=$(text)
            $($2 "${oright#* }")
			times=$(cat "/tmp/.bashirc/fantasy.$(nick)_$1")
			echo "$((times+1))" > "/tmp/.bashirc/fantasy.$(nick)_$1"
         else
            echo 1
         fi
      else
         echo 0
      fi
   fi
}
function fantasy.char() {
   echo "$fantasy_char"
}
#Fantasy.flood is currently borked, someone care to fix it?
#function fantasy.flood() {
#	#Prevent flooding of fantasy commands
#	#Usuage: fantasy.flood <command> <times> <duration> <function to call (optional)>
#	if [ -e "/tmp/.bashirc/fantasy.$(nick)_$1" ]; then
#		times=$(cat "/tmp/.bashirc/fantasy.$(nick)_$1")
#			if [ "$4" ]; then
#				$("$4")
#			else
#				echo 1
#			fi
#			sleep "$3"; echo "" > "/tmp/.bashirc/fantasy.$(nick)_$1"
#		else
#			sleep "$3"; echo "" > "/tmp/.bashirc/fantasy.$(nick)_$1"
#		fi
#	fi
#}

