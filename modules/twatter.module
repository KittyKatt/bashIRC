#!/bin/bash
#Twatter 0.1 by ttwj
#Module for bashIRC
#Define some stuff
cmd=$(echo "$(text)" | awk '{print $1}')
file=$(cat ~/twatter/main)
#Functions
function no() {
   echo $(echo "$(text)" | awk "{print $@}")
}
function if_identify() {
   if [ "$(echo $2 | md5sum | awk '{print $1}')" != "$password" ]; then
      echo 0
   else
      user=$(echo $1 | tr '[A-Z]', '[a-z]')
      if [ ! "$(cat ~/twatter/hosts | grep $(nick)!$(host))" ]; then
         echo "$user $(nick)!$(host)" >> ~/twatter/hosts
         echo 1
      else
         echo 3
      fi
   fi
}
function addtwat() {
   twatts=$(cat ~/twatter/twatts)
   echo "$((twatts+1))" > ~/twatter/twatts
}
function if_userexists() {
   while read line; do
      if [ "$(echo "$line" | grep "USER $1")" ]; then
         shit=1
      fi
   done < ~/twatter/main
   if [ "$shit" ]; then
      echo $shit;
   else
      echo 0;
   fi
}
function if_login() {
   if [ "$(cat ~/twatter/hosts | grep $(nick)!$(host))" ]; then
      echo $(cat ~/twatter/hosts | grep $(nick)!$(host) | awk '{print $1}')
   else
      echo 0
   fi
}
if [ "$(type)" = "PRIVMSG" ]; then
   if [ "$(dest nick)" ]; then
      #Login command
      if [ "$cmd" = "login" ]; then
         result=$(if_userexists $(no '$2'))
         if [ "$result" = "0" ]; then
            notice $(nick) Error: No such user exists in the database
            elif [ "$result" = "1" ]; then
            #Login :D
            password=$(cat ~/twatter/main | grep "USER $(no '$2')" | awk '{print $3}')
            result=$(if_identify $(no '$2') $(no '$3'))
            if [ "$result" = "3" ]; then
               notice $(nick) You are already logged in.
               elif [ "$result" = "0" ]; then
               notice $(nick) Invalid username/password combination.
               elif [ "$result" = "1" ]; then
               notice $(nick) You are now logged in.
            fi
         fi
         
         
         #Status command
         elif [ "$cmd" = "status" ]; then
         if [ ! "$(no '$2')" ]; then
            notice $(nick) Please provide a status.
         else
            #Check if logged in
            user=$(if_login $(nick) | tr '[A-Z]', '[a-z]')
            if [ "$user" = "0" ]; then
               notice $(nick) You are not logged in.
            else
               brix=$(text)
               lastline=$(wc -l ~/twatter/users/$user/tweets | awk '{print $1}')
               #check if status = lastline
               thatline=$(sed -n "$lastline"p ~/twatter/users/$user/tweets)
               if [ "$thatline" = "${brix#* }" ]; then
                  notice $(nick) Error: Replicating message
               else
                  
                  #Regex
                  for i in ${brix#* }; do
                     #grep for a hashtag
                     if [ "$(echo $i | grep '#')" ]; then
                        #so there's a hashtag :D
                        #find the hashtag file and grep that hastag
                        if [ "$(cat ~/twatter/hashtags | grep "$i")" ]; then
                           wut=$(cat ~/twatter/hashtags | grep "$i")
                           no=$(echo "$wut" | awk '{print $2}')
                           tag=$(echo "$wut" | awk '{print $1}')
                           o=$(sed -e "s/$wut/$((no+1)) $tag/" ~/twatter/hashtags > ~/twatter/hashtags_)
                           mv ~/twatter/hashtags_ ~/twatter/hashtags
                        else
                           echo "1 $i" >> ~/twatter/hashtags
                        fi
                     fi
                  done
                  echo "${brix#* }" >> ~/twatter/users/$user/tweets
                  notice $(nick) Updated status sucessfully.
                  addtwat
                  brix=$(text)
                  msg $twatter_chan ["$user"/"$(wc -l ~/twatter/users/$user/tweets | awk '{print $1}')"] : ${brix#* }
               fi
            fi
         fi
         elif [ "$cmd" = "show" ]; then
         if [ ! "$(no '$2')" ]; then
            notice $(nick) Please provide a twatt in the format of <user>/<twatt> eg: Halon/3
         else
            twatt_user=$(echo "$(no '$2')" | sed -e 's/\// /g')
            twatt_no=$(echo "$twatt_user" | awk '{print $2}')
            twatt_user=$(echo "$twatt_user" | awk '{print $1}')
            
            if [ "$(wc -l ~/twatter/users/$twatt_user/tweets | awk '{print $1}')" < "$twatt_no" ]; then
               notice $(nick) Error: No such twatt exists
            else
               twatt="$(sed -n "$twatt_no"p ~/twatter/users/$twatt_user/tweets)"
               notice $(nick) ["$twatt_user"/"$twatt_no"] : $twatt
               
            fi
         fi
         
         elif [ "$cmd" = "retwatt" ]; then
         if [ ! "$(no '$2')" ]; then
            notice $(nick) Please provide a twatt in the format of <user>/<twatt> eg: Halon/3
         else
            
            if [ "$(wc -l ~/twatter/users/$twatt_user/tweets | awk '{print $1}')" < "$twatt_no" ]; then
               notice $(nick) Error: No such twatt exists
            else
               twatt_user=$(echo "$(no '$2')" | sed -e 's/\// /g')
               twatt_no=$(echo "$twatt_user" | awk '{print $2}')
               twatt_user=$(echo "$twatt_user" | awk '{print $1}')
				user=$(if_login $(nick) | tr '[A-Z]', '[a-z]')
               twatt="$(sed -n "$twatt_no"p ~/twatter/users/$twatt_user/tweets)"
               echo "$twatt (via @$twatt_user)" >> ~/twatter/users/$(if_login)/tweets
               notice $(nick) Retwatted sucessfully ^_^
               addtwat
               msg $twatter_chan ["$(if_login $(nick))"/"$(wc -l ~/twatter/users/$user/tweets | awk '{print $1}')"] : $twatt "(via @$twatt_user)"
            fi
         fi
         
         elif [ "$cmd" = "register" ]; then
         if [ "$(if_login)" != "0" ]; then
            notice $(nick) You are already logged in and registered.
         else
            if [ ! $(no '$2') ]; then
               notice $(nick) Invalid syntax /msg w00t help
            else
               if [ ! $(no '$3') ]; then
                  notice $(nick) Invalid syntax /msg w00t help
               else
                  if [ "$(if_userexists $(no '$2'))" = "1" ]; then
                     notice $(nick) This username is already registered, please pick another.
                  else
                     echo "USER $(no '$2') $(no '$3' | md5sum | awk '{print $1}')" >> ~/twatter/main
                     notice $(nick) Thanks, you are now registered.
                     notice $(nick) Logging you in..
                     mkdir ~/twatter/users/"$(no '$2' | tr '[A-Z]', '[a-z]')"
                     echo "" > ~/twatter/users/"$(no '$2')"/tweets
                     password=$(cat ~/twatter/main | grep "USER $(no '$2')" | awk '{print $3}')
                     result=$(if_identify $(no '$2') $(no '$3'))
                     if [ "$result" = "1" ]; then
                        notice $(nick) You are now logged in.
                     else
                        notice $(nick) Something happened! Please contact the bot admin to fix it!
                     fi
                  fi
               fi
            fi
         fi
         elif [ "$cmd" = "help" ]; then
         notice $(nick) -- Twatter Help --
         notice $(nick) "-- login <user> <pass> -- Logs in"
         notice $(nick) "-- register <user> <pass> -- Registers"
         notice $(nick) "-- retwatt <user/tweet> -- Retwatts someone's twatts"
         notice $(nick) "-- show <user/tweet> -- Shows someone's twattts"
		 notice $(nick) "-- status <message> -- Update your status"
		 notice $(nick) "-- <message> Also updates your status"
		 notice $(nick) "-- logout -- Logs you out :)"
         notice $(nick) "-- Twatter v0.1 (bashIRC) beta, please report all bugs to Halon!"
		 elif [ "$cmd" = "logout" ]; then
			if [ "$(if_login)" != "0" ]; then
				hostline=$(cat ~/twatter/hosts | grep "$(if_login) $(nick)!($host)")
				new=$(cat ~/twatter/hosts | sed -e "s/$hostline//g" > ~/twatter/hosts_)
				mv ~/twatter/hosts_ ~/twatter/hosts
				notice $(nick) You are now logged out.
			else
				notice $(nick) You are not logged in.
			fi
      else
         #Take it as a status update :)
         user=$(if_login $(nick) | tr '[A-Z]', '[a-z]')
         if [ "$user" = "0" ]; then
            notice $(nick) You are not logged in.
         else
            brix=$(text)
            lastline=$(wc -l ~/twatter/users/$user/tweets | awk '{print $1}')
            #check if status = lastline
            thatline=$(sed -n "$lastline"p ~/twatter/users/$user/tweets)
            if [ "$thatline" = "$brix" ]; then
               notice $(nick) Error: Replicating message
            else
               
               #Regex
               for i in $brix; do
                  #grep for a hashtag
                  if [ "$(echo $i | grep '#')" ]; then
                     #so there's a hashtag :D
                     #find the hashtag file and grep that hastag
                     if [ "$(cat ~/twatter/hashtags | grep "$i")" ]; then
                        wut=$(cat ~/twatter/hashtags | grep "$i")
                        no=$(echo "$wut" | awk '{print $2}')
                        tag=$(echo "$wut" | awk '{print $1}')
                        o=$(sed -e "s/$wut/$((no+1)) $tag/" ~/twatter/hashtags > ~/twatter/hashtags_)
                        mv ~/twatter/hashtags_ ~/twatter/hashtags
                     else
                        echo "1 $i" >> ~/twatter/hashtags
                     fi
                  fi
               done
               echo "$brix" >> ~/twatter/users/$user/tweets
               notice $(nick) Updated status sucessfully.
               addtwat
               brix=$(text)
               msg $twatter_chan ["$user"/"$(wc -l ~/twatter/users/$user/tweets | awk '{print $1}')"] : ${brix}
            fi
         fi
         
      fi
   fi
fi
if [ "$(type)" = "TOPIC" ]; then
   #sort the hashtags file
   x=1
   sort=$(sort -n ~/twatter/hashtags > ~/twatter/hashtags_; mv ~/twatter/hashtags_ ~/twatter/hashtags)
   sort=$(while read line; do
         echo -n "$(echo "$line" | awk '{print $2}') "
         x=$((x+1))
         if [ "$x" = "6" ]; then
            break
         fi
   done < ~/twatter/hashtags)
   twatts=$(cat ~/twatter/twatts)
   
   newtopic=$(echo "$(text)" | sed -e "s/Trending tags - \(.*\) :: We have \(.*\) twatts online!/Trending tags - $sort :: We have $twatts twatts online!/")
   #update topic
   if [ "$(nick)" != "w00t" ]; then
      echo "$newtopic" > ~/twatter/topic
      echo "TOPIC $(dest chan) :$newtopic" >> shellbot.input
   fi
fi









