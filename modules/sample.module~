#!/bin/bash
#Sample module for bashIRC 0.3-1
owner="Halon"
hook=$(help.hook "$(fantasy.char)lmg <stuff> -- Googles stuff for you :)")
#Hook onto help for lmg
if [ "$hook" = "0" ]; then
   echo "Alert! Help cannot be hooked for function lmg!"
   #Any msg will do or just ignore it :3
   exit 1
fi
hook=$(help.hook "$(fantasy.char)shorten <url> -- Shortens URL for you :)")
#Hook onto help for URL
if [ "$hook" = "0" ]; then
   echo "Alert! Help cannot be hooked for function shorten!"
   #Any msg will do or just ignore it :3
   exit 1
fi

function shorten() {
   #Using fantasy omits the original fantasy word
   shortened=$(curl -s "http://is.gd/api.php?longurl=$1")
   msg $(dest) Shortened URL: $shortened
}
function lmg() {
   if [ "${@}" ]; then
      msg $(dest) $(curl "http://is.gd/api.php?longurl=http://lmgtfy.com/?q=$(text | awk '{print $2}')")
   fi
}
#Hook onto fantasy.
if [ "$(fantasy.hook lmg lmg)" = "0" ]; then
   echo "Alert! Cannot hook for fantasy cmd lmg"
   exit 1
fi
if [ "$(fantasy.hook shorten shorten)" = "0" ]; then
   echo "Alert! Cannot hook for fantasy cmd lmg"
   exit 1
fi
if [ "$(type)" = "PRIVMSG" ] && [ "$(dest chan)" ]; then
   cmd=$(text | awk '{print $1}')
   #Shell has been preserved to use the old format for devs who want a reference.
   if [ "$cmd" = "@shell" ]; then
      if [ "$(hostcheck *ttwj*@o.o)" = "1" ]; then
         text=$(text)
         echo "$(eval ${text#* } )" > /tmp/stuff
         while read lol; do
            msg $(dest chan) $lol
         done < /tmp/stuff
      else
         notice $nick_ Who on earth do you think you are?
            
      fi
   fi
fi
#Autojoin on invite.
if [ "$(type)" = "INVITE" ]; then
   #Alternative, check if nick who invited was owner or w/e
   if [ "$(hostcheck *ttwj@o.o)" = "1" ]; then
      
      chan=$(echo ${@} | awk '{print $4}')
      chan=$(echo "$chan" | sed -e 's/://g')
      echo "JOIN $chan" >> shellbot.input
   fi
fi
