#!/bin/bash
#Sample module for bashIRC 0.3-1
owner="Halon"
$(help.hook "$(fantasy.char)lmg <stuff> -- Googles stuff for you") > /dev/null
$(help.hook "$(fantasy.char)shorten <url> -- Shortens URL for you :)") > /dev/null
$(help.hook "$(fantasy.char)say <some stuff> -- Say that some stuff for you :p") > /dev/null
function say() {
	msg $(dest) "${@}"
}
function shorten() {
   #Using fantasy omits the original fantasy word
   shortened=$(curl -s "http://is.gd/api.php?longurl=$1")
   msg $(dest) "Shortened URL: $shortened"
}
function lmg() {
   if [ "${@}" ]; then
      msg $(dest) $(curl "http://is.gd/api.php?longurl=http://lmgtfy.com/?q=${@}")
   fi
}
#Hook onto fantasy.
hook=$(fantasy.hook lmg lmg > /dev/null)
hook=$(fantasy.hook shorten shorten > /dev/null)
hook=$(fantasy.hook say say > /dev/null)

if [ "$(type)" = "PRIVMSG" ] && [ "$(dest chan)" ]; then
   cmd=$(text | awk '{print $1}')
   #Shell has been preserved to use the old format for devs who want a reference.
   if [ "$cmd" = "@shell" ]; then
      if [ "$(hostcheck *ttwj*@o.o)" = "1" ]; then
         text=$(text)
         echo "$(eval ${text#* } )" > /tmp/stuff
         while read lol; do
            msg $(dest chan) "$lol"
         done < /tmp/stuff
      else
         notice $(nick) "Who on earth do you think you are?"
            
	  fi
	fi
fi
   #Autojoin on invite.
   if [ "$(type)" = "INVITE" ]; then
      #Alternative, check if nick who invited was owner or w/e
             
         chan=$(echo "$input" | awk '{print $4}')
         chan=$(echo "$chan" | sed -e 's/://g')
         $(bot.out "JOIN $chan")
		 if [ ! -e "~/services/$chan" ]; then
			echo "" > "~/services/$chan"
		fi
   fi
